##############################################################################
##############################################################################
##############################################################################
KERNEL 3X3
STRIDE 1
Submitted batch job 
model = Sequential()
model.add(Conv2D(16, (3, 3), activation='relu', input_shape=input_shape, padding = "same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.1))
model.add(Conv2D(32, (3, 3), activation='relu', padding = "same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.2))
model.add(Conv2D(64, (3, 3), activation='relu', padding="same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.4))
model.add(Conv2D(128, (3, 3), activation='relu', padding="same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.7))
model.add(Flatten())
model.add(Dense(256, activation='relu'))
model.add(Dense(len(Y_data_train[0]), activation=(tf.nn.softmax)))#.shape[1]

epochs = 100 (stoped at )
train acc = 
test acc =

##############################################################################
##############################################################################
##############################################################################
KERNEL 3X3
STRIDE 2
Submitted batch job 
model = Sequential()
model.add(Conv2D(16, (3, 3), (2, 2), activation='relu', input_shape=input_shape, padding = "same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.1))
model.add(Conv2D(32, (3, 3), (2, 2), activation='relu', padding = "same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.2))
model.add(Conv2D(64, (3, 3), (2, 2), activation='relu', padding="same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.4))
model.add(Conv2D(128, (3, 3), (2, 2), activation='relu', padding="same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.7))
model.add(Flatten())
model.add(Dense(256, activation='relu'))
model.add(Dense(len(Y_data_train[0]), activation=(tf.nn.softmax)))#.shape[1]

epochs = 100 (stoped at )
train acc = 
test acc = 

##############################################################################
##############################################################################
##############################################################################
KERNEL 3X3
STRIDE 3X3
Submitted batch job 
model = Sequential()
model.add(Conv2D(16, (3, 3), (3, 3), activation='relu', input_shape=input_shape, padding = "same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.1))
model.add(Conv2D(32, (3, 3), (3, 3), activation='relu', padding = "same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.2))
model.add(Conv2D(64, (3, 3), (3, 3), activation='relu', padding="same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.4))
model.add(Conv2D(128, (3, 3), (3, 3), activation='relu', padding="same"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.7))
model.add(Flatten())
model.add(Dense(256, activation='relu'))
model.add(Dense(len(Y_data_train[0]), activation=(tf.nn.softmax)))#.shape[1]

epochs = 100 (stoped at )
train acc = 
test acc = 
